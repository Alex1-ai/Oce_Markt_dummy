name: oce-markt

on:
    push:
        branches:
            - master
    pull_request:
        branches: [master]
        types: [opened, synchronize]

jobs:
    ocemarkt_pipeline:
        runs-on: ubuntu-latest
        env:
          CLOUD_NAME: ${{ secrets.CLOUD_NAME}}
          API_KEY: ${{ secrets.API_KEY }}
          API_SECRET: ${{ secrets.API_SECRET }}


        name: Checkout Repository

        steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.8

        - name: Install dependencies
          run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt


        - name: Run tests
          run: |
              python manage.py test

        - name: Deploy
          if: ${{ github.event_name == 'push' && github.ref =='refs/heads/master' && !contains(toJson(github.event.commits.*.message),'#skip')   }}
          env:
            deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          run: |
            curl "$deploy_url"
    build-and-share:
      runs-on: ubuntu-latest
      needs: [ocemarkt_pipeline]

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO_NAME }}:latest

    tag_release:
      if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}
      needs: [build-and-share, ocemarkt_pipeline]
      permissions:
        contents: write
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: '0'
        - name: Bump version and push tag
          uses: anothrNick/github-tag-action@1.64.0
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            WITH_V: true
            DEFAULT_BUMP: patch

